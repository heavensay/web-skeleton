<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.www.skeleton.repository.mapper.user.PermsUserRoleMapper" >
        <resultMap id="BaseResultMap" type="com.www.skeleton.repository.po.user.PermsUserRole" >

        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="perms_role_id" property="permsRoleId" jdbcType="BIGINT" />
        </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
     id,
          user_id,
          perms_role_id     
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.www.skeleton.repository.po.user.PermsUserRoleExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
            from perms_user_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from perms_user_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from perms_user_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.www.skeleton.repository.po.user.PermsUserRoleExample" >
        delete from perms_user_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
                     <insert id="insert" parameterType="com.www.skeleton.repository.po.user.PermsUserRole" useGeneratedKeys="true" keyProperty="id" >
           insert into perms_user_role (
                          user_id,
                                     perms_role_id           )

           values (
                          #{userId,jdbcType=BIGINT},
                                     #{permsRoleId,jdbcType=BIGINT}                      )
       </insert>
       <insert id="insertSelective" parameterType="com.www.skeleton.repository.po.user.PermsUserRole" useGeneratedKeys="true" keyProperty="id" >
           insert into perms_user_role
           <trim prefix="(" suffix=")" suffixOverrides="," >
                                  <if test="userId != null" >
                       user_id,
                   </if>
                                  <if test="permsRoleId != null" >
                       perms_role_id,
                   </if>
                          </trim>
           <trim prefix="values (" suffix=")" suffixOverrides="," >
                                  <if test="userId != null" >
                       #{userId,jdbcType=BIGINT},
                   </if>
                                  <if test="permsRoleId != null" >
                       #{permsRoleId,jdbcType=BIGINT},
                   </if>
                          </trim>

       </insert>

       <insert id="insertBatch" parameterType="java.util.List" >
           insert into perms_user_role (
                          user_id,
                                     perms_role_id                      )
           values
           <foreach collection="list" item="item" index="index" separator="," >
               (
                                  #{item.userId,jdbcType=BIGINT},
                                                 #{item.permsRoleId,jdbcType=BIGINT}               
               )
           </foreach>
       </insert>
   
    <select id="countByExample" parameterType="com.www.skeleton.repository.po.user.PermsUserRoleExample" resultType="java.lang.Integer" >
        select count(*) from perms_user_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <select id="countGroupByExample" parameterType="Map" resultType="Map" >
        select
        <foreach collection="groupByFields" item="item" index="index" separator="," >
            ${item}
        </foreach>
        ,
        <foreach collection="sumFields" item="item" index="index" separator="," >
            count(${item}) as ${item}
        </foreach>
        from perms_user_role
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        group by
        <foreach collection="groupByFields" item="item" index="index" separator="," >
            ${item}
        </foreach>
    </select>



    <select id="sumByExample" parameterType="Map" resultType="Map" >
        select
        <foreach collection="groupByFields" item="item" index="index" separator="," >
            ${item}
        </foreach>
        ,
        <foreach collection="sumFields" item="item" index="index" separator="," >
            sum(${item}) as ${item}
        </foreach>
        from perms_user_role
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        group by
        <foreach collection="groupByFields" item="item" index="index" separator="," >
            ${item}
        </foreach>
    </select>


    <update id="updateByExampleSelective" parameterType="map" >
        update perms_user_role
        <set >
        <if test="record.id != null" >
            id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.userId != null" >
            user_id = #{record.userId,jdbcType=BIGINT},
        </if>
        <if test="record.permsRoleId != null" >
            perms_role_id = #{record.permsRoleId,jdbcType=BIGINT},
        </if>
                </set>
<if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update perms_user_role
        set         id = #{record.id,jdbcType=BIGINT},
                    user_id = #{record.userId,jdbcType=BIGINT},
                    perms_role_id = #{record.permsRoleId,jdbcType=BIGINT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.www.skeleton.repository.po.user.PermsUserRole" >
        update perms_user_role
        <set >
                        <if test="userId != null" >
                user_id = #{userId,jdbcType=BIGINT},
              </if>             <if test="permsRoleId != null" >
                perms_role_id = #{permsRoleId,jdbcType=BIGINT}  </if>     </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.www.skeleton.repository.po.user.PermsUserRole" >
        update perms_user_role
        set
                user_id = #{userId,jdbcType=BIGINT},
                perms_role_id = #{permsRoleId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>