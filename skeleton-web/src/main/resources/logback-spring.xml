<?xml version="1.0" encoding="UTF-8" ?>
<!--
	说明：
	1、日志级别及文件
		日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
		例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，
		日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名
		例如log-error-2016-02-02.0.log
		其它级别的日志也是如此。
	2、文件路径
		若开发、测试用，在 IntelliJ IDEA 中运行项目，则到 IntelliJ IDEA 的安装路径查找logs文件夹，以相对路径../logs。
		若部署到Tomcat下，则在Tomcat下的logs文件中
	3、Appender
		FILEOUT 将日志信息输出到log文件上，文件名以log.log形式命名
		STDOUT 将日志信息输出到控制上，为方便开发测试使用
 -->
<configuration debug="true">

    <!--定义日志文件的存储地址 -->
    <property name="LOG_PATH" value="../logs"/>
    <!--<property name="LOG_PATH" value="../logs"/>-->
    <property name="CHARSET" value="UTF-8"/>
    <property name="LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [%file:%line] %logger{80} %msg%n"/>

    <!-- ================================================================================= -->
    <!-- 日志appender配置-->
    <!-- ================================================================================= -->

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
    </appender>

    <!-- 日志文件输出 -->
    <appender name="FILEOUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/catalina.log</file>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2016-02-02日志，当前写的日志文件路径为file节点指定，
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/catalina-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过20M，若超过20M，日志文件会以索引0开始，命名日志文件，例如catalina-2016-02-02.0.log -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 此日志文件只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>


    <!-- ================================================================================= -->
    <!-- 根日志配置 -->
    <!-- ================================================================================= -->

    <root level="debug">
        <appender-ref ref="FILEOUT"/>

        <!-- 生产环境请将stdout去掉 -->
        <appender-ref ref="STDOUT"/>
    </root>
    <!-- dozer打印日志 -->
    <logger name="org.dozer" level="INFO"/>
    <logger name="org.apache.http" level="INFO"/>
    <logger name="org.apache.commons.beanutils" level="INFO"/>

</configuration>
